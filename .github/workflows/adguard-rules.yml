# 工作流的名称
name: Update All AdGuard Home Rules

# 触发工作流的条件
on:
  workflow_dispatch:
  schedule:
    - cron: '5 */8 * * *'

# =========================================================================
# --- 全局配置区 ---
# 在这里统一定义所有规则列表和删除列表，实现“一次定义，多处使用”。
# =========================================================================
env:
  # --- 基础规则列表---
  BASE_URLS: |
    # AWAvenue Ads Rule
    https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/main/assets/filter_53.txt
    # uBlock₀ filters – Badware risks
    https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/main/assets/filter_50.txt
    # HaGeZi's Allowlist Referral
    https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/whitelist-referral.txt
    # OISD Blocklist Small
    https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/main/assets/filter_5.txt
    # 1Hosts (Lite)
    https://raw.githubusercontent.com/badmojr/1Hosts/master/Lite/adblock.txt
    # easylistchina+easylist
    https://raw.githubusercontent.com/mustssr/H-AD-DNS/main/easylist/easylistah.txt

  # --- 额外规则列表---
  EXTRA_URLS: |
    # AdGuard DNS Popup Hosts filter
    https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/main/assets/filter_59.txt
    # HaGeZi's Ban Doh
    https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/doh.txt
    # HaGeZi Threat Intelligence Feeds - IPs
    https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/tif-ips.txt
    # HaGeZi's Gambling DNS Blocklist - mini version
    https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/gambling.mini.txt

  # --- 统一的自定义删除列表 ---
  DELETELIST_CONTENT: |
    # 示例
    ||test11111111111111111111111111111.com^


jobs:
  # --- 任务1: 生成 adguard-rules.txt (基础版) ---
  build-rules-base:
    runs-on: ubuntu-latest
    steps:
      - name: Generate adguard-rules.txt
        run: |
          TEMP_FILE="temp_rules_base.txt"
          OUTPUT_FILE="adguard-rules.txt"
          
          # 从环境变量读取 URL 列表，并使用 grep 过滤掉注释行和空行
          readarray -t URLS < <(echo "${{ env.BASE_URLS }}" | grep -vE '^\s*#|^\s*$')

          # 从环境变量创建删除列表文件
          echo "${{ env.DELETELIST_CONTENT }}" > deletelist.txt

          echo "Downloading base rules for adguard-rules.txt..."
          > $TEMP_FILE
          for url in "${URLS[@]}"; do
            # 跳过可能存在的空条目
            [[ -z "$url" ]] && continue
            curl -sL --fail "$url" >> $TEMP_FILE || echo "Failed to download $url"
          done

          # 处理逻辑保持不变
          (
            echo "! Title: H-AD-DNS"
            echo "! Last modified: $(TZ='Asia/Shanghai' date +'%Y-%m-%d-%I:%M%p')(UTC+8)"
            echo "! Total rules: $(grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f deletelist.txt | wc -l)"
            echo ""
            grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f deletelist.txt
          ) > $OUTPUT_FILE

          rm $TEMP_FILE deletelist.txt
          echo "Done. Base rules saved to $OUTPUT_FILE"

      - uses: actions/upload-artifact@v4
        with:
          name: rules-base
          path: adguard-rules.txt

  # --- 任务2: 生成 adguard-rules2.txt (增强版) ---
  build-rules-extended:
    runs-on: ubuntu-latest
    steps:
      - name: Generate adguard-rules2.txt
        run: |
          TEMP_FILE="temp_rules_extended.txt"
          OUTPUT_FILE="adguard-rules2.txt"

          # 从环境变量读取并过滤基础和额外 URL 列表
          readarray -t BASE_URLS_ARR < <(echo "${{ env.BASE_URLS }}" | grep -vE '^\s*#|^\s*$')
          readarray -t EXTRA_URLS_ARR < <(echo "${{ env.EXTRA_URLS }}" | grep -vE '^\s*#|^\s*$')
          # 合并两个数组
          URLS=("${BASE_URLS_ARR[@]}" "${EXTRA_URLS_ARR[@]}")

          # 从环境变量创建删除列表文件
          echo "${{ env.DELETELIST_CONTENT }}" > deletelist.txt

          echo "Downloading extended rules for adguard-rules2.txt..."
          > $TEMP_FILE
          for url in "${URLS[@]}"; do
            [[ -z "$url" ]] && continue
            curl -sL --fail "$url" >> $TEMP_FILE || echo "Failed to download $url"
          done

          # 处理逻辑保持不变
          (
            echo "! Title: H-AD-DNS-PLUS"
            echo "! Last modified: $(TZ='Asia/Shanghai' date +'%Y-%m-%d-%I:%M%p')(UTC+8)"
            echo "! Total rules: $(grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f deletelist.txt | wc -l)"
            echo ""
            grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f deletelist.txt
          ) > $OUTPUT_FILE

          rm $TEMP_FILE deletelist.txt
          echo "Done. Extended rules saved to $OUTPUT_FILE"

      - uses: actions/upload-artifact@v4
        with:
          name: rules-extended
          path: adguard-rules2.txt
          
  # --- 任务3: 检出仓库, 合并产物并提交 ---
  commit-and-push:
    needs: [build-rules-base, build-rules-extended]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: rules-base
      - uses: actions/download-artifact@v4
        with:
          name: rules-extended
      - name: Commit and push if changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add adguard-rules.txt adguard-rules2.txt
          if git diff --staged --quiet; then
            echo "Files have no changes, no commit needed."
          else
            git commit -m "feat: Update AdGuard rule files on $(TZ='Asia/Shanghai' date)"
            git push
          fi
