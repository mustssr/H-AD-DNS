# 工作流的名称
name: Update AdGuard Home Rules 2

# 触发工作流的条件
on:
  # 允许手动触发
  workflow_dispatch:

  # 定时触发
  schedule:
    # 将 cron 表达式修改为每8小时运行一次
    - cron: '5 */8 * * *'

# 定义一个名为 'build' 的任务
jobs:
  build:
    # 任务运行的虚拟环境
    runs-on: ubuntu-latest

    # 授予工作流写入仓库内容的权限
    permissions:
      contents: write

    # 任务包含的步骤
    steps:
      # 第一步：检出你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：下载、合并、去重、删除自定义行并添加头部信息
      - name: Fetch, merge, deduplicate, remove custom lines, and add header
        run: |
          TEMP_FILE="temp_rules2.txt"
          OUTPUT_FILE="adguard-rules2.txt"
          DELETELIST_FILE="deletelist2.txt"
          
          # --- 自定义删除列表 ---
          # 在下面的 EOF 和 EOF 之间，每行输入一条您想删除的精确规则。
          # 以 # 开头的行将被视为注释，不会生效。
          cat > "$DELETELIST_FILE" << EOF
          # 示例
          ||test11111111111111111111111111111.com^
          # 蓝奏云
          ||dmpdmp.com^
          EOF

          URLS=(
            # AWAvenue Ads Rule
            "https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/refs/heads/main/assets/filter_53.txt"
            # uBlock₀ filters – Badware risks
            "https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/refs/heads/main/assets/filter_50.txt"
            # HaGeZi's Threat Intelligence Feeds DNS Blocklist - mini version
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/tif.mini.txt"
            # HaGeZi's Allowlist Referral
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/whitelist-referral.txt"
            # HaGeZi's Normal DNS Blocklist
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/multi.txt"
            # 1Hosts (Lite)
            "https://raw.githubusercontent.com/badmojr/1Hosts/master/Lite/adblock.txt"
            # AdGuard DNS Popup Hosts filter
            "https://raw.githubusercontent.com/AdguardTeam/HostlistsRegistry/refs/heads/main/assets/filter_59.txt"
            # HaGeZi's Ban Doh
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/doh.txt"
            # HaGeZi Threat Intelligence Feeds - IPs
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/tif-ips.txt"
            # HaGeZi's Gambling DNS Blocklist - mini version
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/adblock/gambling.mini.txt"
          )
          
          echo "Downloading rules..."
          > $TEMP_FILE
          for url in "${URLS[@]}"; do
            curl -sL "$url" >> $TEMP_FILE || echo "Failed to download $url"
          done

          # 过滤掉删除列表中的注释和空行，生成一个干净的列表供 grep 使用
          CLEAN_DELETELIST_FILE="deletelist.clean2.txt"
          grep -vE '^#|^\s*$' "$DELETELIST_FILE" > "$CLEAN_DELETELIST_FILE"

          echo "Processing rules and adding header..."
          (
            echo "! Title: H-AD-DNS"
            echo "! Last modified: $(TZ='Asia/Shanghai' date +'%Y-%m-%d-%I:%M%p')(UTC+8)"
            # --- 核心修改点 1 ---
            # 在计算总数时，使用 grep -v -F -f 从文件中读取要排除的规则
            echo "! Total rules: $(grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f "$CLEAN_DELETELIST_FILE" | wc -l)"
            echo ""
            # --- 核心修改点 2 ---
            # 在处理规则时，同样使用 grep -v -F -f 来删除指定的所有规则
            grep -vE '^#|^!|^\s*$' $TEMP_FILE | sed 's/\r$//' | sort -u | grep -v -F -f "$CLEAN_DELETELIST_FILE"
          ) > $OUTPUT_FILE

          # 清理临时文件
          rm $TEMP_FILE $DELETELIST_FILE $CLEAN_DELETELIST_FILE
          echo "Done. Final list with header saved to $OUTPUT_FILE"

      # 第三步：提交并推送更改到仓库
      - name: Commit and push if changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add adguard-rules2.txt
          
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "feat: Update rules and metadata on $(TZ='Asia/Shanghai' date)"
            git push
          fi
